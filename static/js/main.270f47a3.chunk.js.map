{"version":3,"sources":["firebase/config.js","firebase/getMissions.js","firebase/getIdByEmail.js","components/goalpage.js","firebase/getUser.js","components/profilepage.js","components/mybookingpage.js","components/myreviewpage.js","components/myfavoritepage.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","getMissions","missionId","Promise","resolve","reject","missions","collection","doc","toString","get","then","data","docs","map","push","getIdByEmail","email","id","GoalPage","useState","setEmail","setMissions","useEffect","className","value","onChange","e","target","style","margin","type","placeholder","onClick","ID_Mission","missionsData","msns","mission","i","Name","getUser","where","user","ProfilePage","profileData","setProfileData","handlClick","console","log","FirstName","LastName","Points","MyBookingPage","booking","setBooking","Price","Status","MyReviewPage","reviews","setReviews","restaurantId","branchData","branch","branchId","clientId","review","reviewData","rvs","Description","MyFavoritesPage","favorites","setFavorites","client","Favourites","forEach","ref","favorite","favoriteData","fts","fav","HSeats","Address","App","padding","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAWAA,IAASC,cAVY,CACjBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iB,mBCRbC,EAAKV,IAASW,YAoBLC,EAlBK,SAACC,GACjB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAIC,EAAW,GACVJ,EAQDH,EAAGQ,WAAW,YAAYC,IAAIN,EAAUO,YAAYC,MAAMC,MAAK,SAAAH,GAC3DJ,EAAQI,EAAII,WARhBb,EAAGQ,WAAW,YAAYG,MAAMC,MAAK,SAAAC,GACjCA,EAAKC,KAAKC,KAAI,SAAAN,GACVF,EAASS,KAAKP,EAAII,WAEtBR,EAAQE,UCVlBP,EAAKV,IAASW,YAaLgB,EAXM,SAAAC,GACjB,OAAO,IAAId,SAAQ,SAACC,EAASC,GACzBN,EAAGQ,WAAW,WAAWG,MAAMC,MAAK,SAAAC,GAChCA,EAAKC,KAAKC,KAAI,SAAAN,GACAA,EAAII,OACRK,QAAUA,GAAOb,EAAQI,EAAIU,cCJ7CnB,EAAKV,IAASW,YAgDLmB,EA5CE,WAAO,IAAD,EAEOC,mBAAS,MAFhB,mBAEZH,EAFY,KAELI,EAFK,OAGaD,mBAAS,IAHtB,mBAGZd,EAHY,KAGFgB,EAHE,KAKnBC,qBAAU,WACNtB,IAAcU,MAAK,SAAAL,GACfgB,EAAYhB,QAEjB,IAeH,OACI,sBAAKkB,UAAU,YAAf,UACI,2CACA,8BACI,uBAAOC,MAAM,qBAAqBC,SAAU,SAAAC,GAAC,OAAIN,EAASM,EAAEC,OAAOH,QAAQI,MAAO,CAACC,OAAQ,UAAWC,KAAK,OAAOC,YAAY,wBAC9H,wBAAQC,QAlBD,WACfjB,EAAaC,GAAON,MAAK,SAAAO,GACrBI,EAAY,IACZvB,EAAGQ,WAAW,WAAaW,EAAK,aAAaR,MAAMC,MAAK,SAAAC,GACpDA,EAAKC,KAAKC,KAAI,SAAAN,GACVA,EAAII,OAAOsB,WAAWxB,MAAMC,MAAK,SAAAwB,GAC7Bb,GAAY,SAAAc,GAAI,4BAAQA,GAAR,CAAcD,EAAavB,yBAYnD,oBAEJ,yCAEA,qBAAKY,UAAU,WAAf,SACKlB,GAAYA,EAASQ,KAAI,SAACuB,EAASC,GAChC,OACI,kCAAaD,EAAQE,KAArB,MAAQD,YC3C1BvC,EAAKV,IAASW,YAYLwC,EAVC,SAACvB,GACb,OAAO,IAAId,SAAQ,SAACC,EAASC,GACzBN,EAAGQ,WAAW,WAAWkC,MAAM,QAAS,KAAMxB,GAAOP,MAAMC,MAAK,SAAAC,GAC5DA,EAAKC,KAAKC,KAAI,SAAA4B,GACVtC,EAAQsC,EAAK9B,kBCkCd+B,EArCK,WAAO,IAAD,EAEgBvB,mBAAS,sBAFzB,mBAEfwB,EAFe,KAEFC,EAFE,OAGIzB,mBAAS,sBAHb,mBAGfH,EAHe,KAGRI,EAHQ,KAMtBE,qBAAU,WACNuB,MACD,IAGH,IAAMA,EAAa,WACfN,EAAQvB,GAAON,MAAK,SAAAC,GAChBiC,EAAejC,GACfmC,QAAQC,IAAIpC,OAIpB,OACI,sBAAKY,UAAU,eAAf,UACI,8CACA,8BACI,uBAAOC,MAAM,qBAAqBC,SAAU,SAAAC,GAAC,OAAIN,EAASM,EAAEC,OAAOH,QAAQI,MAAO,CAACC,OAAQ,UAAWC,KAAK,OAAOC,YAAY,wBAC9H,wBAAQC,QAASa,EAAjB,oBAEJ,6CACA,gCACI,4CAAeF,GAAeA,EAAYK,UAA1C,OACA,2CAAcL,GAAeA,EAAYM,SAAzC,OACA,0CAAaN,GAAeA,EAAYO,OAAxC,OACA,4DACA,gEC/BVpD,EAAKV,IAASW,YA2CLoD,EAxCO,WAAO,IAAD,EAEEhC,mBAAS,sBAFX,mBAEjBH,EAFiB,KAEVI,EAFU,OAGMD,mBAAS,IAHf,mBAGjBiC,EAHiB,KAGRC,EAHQ,KAMxB/B,qBAAU,WACNuB,MACD,IAGH,IAAMA,EAAa,WACf9B,EAAaC,GAAON,MAAK,SAAAO,GAGrBnB,EAAGQ,WAAW,YAAYC,IAAIU,EAAGT,YAAYC,MAAMC,MAAK,SAAA0C,GACpDN,QAAQC,IAAIK,EAAQzC,QACpB0C,EAAWD,EAAQzC,eAM/B,OACI,sBAAKY,UAAU,kBAAf,UACI,6CACA,8BACI,uBAAOC,MAAM,qBAAqBC,SAAU,SAAAC,GAAC,OAAIN,EAASM,EAAEC,OAAOH,QAAQI,MAAO,CAACC,OAAQ,UAAWC,KAAK,OAAOC,YAAY,wBAC9H,wBAAQC,QAASa,EAAjB,oBAGJ,wCACA,mEACA,yEACA,kDAAqBO,GAAWA,EAAQE,MAAxC,OACA,iDAAoBF,GAAWA,EAAQG,OAAvC,WCtCNzD,EAAKV,IAASW,YAoFLyD,EAjFM,WAAO,IAAD,EAEGrC,mBAAS,sBAFZ,mBAEhBH,EAFgB,KAETI,EAFS,OAGOD,mBAAS,IAHhB,mBAGhBsC,EAHgB,KAGPC,EAHO,KAMvBpC,qBAAU,WACNuB,MACD,IAGH,IAAMA,EAAa,WAGfa,EAAW,IAGX5D,EAAGQ,WAAW,eAAeG,MAAMC,MAAK,SAAAC,GACpCA,EAAKC,KAAKC,KAAI,SAAAN,GAIV,IAAMoD,EAAepD,EAAIU,GAGPnB,EAAGQ,WAAW,eAAiBqD,EAAe,WAEtDlD,MAAMC,MAAK,SAAAkD,GACjBA,EAAWhD,KAAKC,KAAI,SAAAgD,GAGhB,IAAMC,EAAWD,EAAO5C,GAIxBF,EAAaC,GAAON,MAAK,SAAAqD,GAGAjE,EAAGS,IAAI,eAAiBoD,EAAe,WAAaG,EAAW,YAAcC,GACrFtD,MAAMC,MAAK,SAAAsD,GAGpB,IAAMC,EAAaD,EAAOrD,OAC1BmC,QAAQC,IAAIkB,GACRA,GAEAP,GAAW,SAAAQ,GAAG,4BAAQA,GAAR,CAAaD,0BAkB3D,OACI,sBAAK1C,UAAU,kBAAf,UACI,4CACA,8BACI,uBAAOC,MAAM,qBAAqBC,SAAU,SAAAC,GAAC,OAAIN,EAASM,EAAEC,OAAOH,QAAQI,MAAO,CAACC,OAAQ,UAAWC,KAAK,OAAOC,YAAY,wBAC9H,wBAAQC,QAASa,EAAjB,oBAGJ,wCACA,8BACKY,GAAWA,EAAQ5C,KAAI,SAACmD,EAAQ3B,GAAT,OAAe,kCAAa2B,EAAOG,YAApB,MAAQ9B,YC9EzDvC,EAAKV,IAASW,YAgDLqE,EA9CS,WAAO,IAAD,EAEAjD,mBAAS,sBAFT,mBAEnBH,EAFmB,KAEZI,EAFY,OAGQD,mBAAS,IAHjB,mBAGnBkD,EAHmB,KAGRC,EAHQ,KAK1BhD,qBAAU,WAENuB,MAED,IAEH,IAAMA,EAAa,WAEfyB,EAAa,IACbvD,EAAaC,GAAON,MAAK,SAAAO,GACHnB,EAAGS,IAAI,WAAaU,GAC5BR,MAAMC,MAAK,SAAA6D,GAEIA,EAAO5D,OAAO6D,WACtBC,SAAQ,SAAAC,GACjBA,EAAIjE,MAAMC,MAAK,SAAAiE,GACX,IAAMC,EAAeD,EAAShE,OAC9BmC,QAAQC,IAAI6B,GACRA,GAAcN,GAAa,SAAAO,GAAG,4BAAQA,GAAR,CAAaD,oBAQnE,OACI,sBAAKrD,UAAU,mBAAf,UACI,8CACA,8BACI,uBAAOC,MAAM,qBAAqBC,SAAU,SAAAC,GAAC,OAAIN,EAASM,EAAEC,OAAOH,QAAQI,MAAO,CAACC,OAAQ,UAAWC,KAAK,OAAOC,YAAY,wBAC9H,wBAAQC,QAASa,EAAjB,oBAEJ,+CACA,8BACKwB,GAAaA,EAAUxD,KAAI,SAACiE,EAAKzC,GAAN,OAAY,0CAAqByC,EAAIC,OAAzB,IAAiC,uBAAjC,aAAkDD,EAAIE,QAAtD,MAAQ3C,YCrBjD4C,EAdH,WAEV,OACE,sBAAKrD,MAAO,CAACsD,QAAS,UAAW3D,UAAU,MAA3C,UACE,8GACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCdN4D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.270f47a3.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAmc_4QAUuVblg8PYtP1nvqJ3jya6fug4c\",\r\n    authDomain: \"appetito-98dc6.firebaseapp.com\",\r\n    databaseURL: \"https://appetito-98dc6.firebaseio.com\",\r\n    projectId: \"appetito-98dc6\",\r\n    storageBucket: \"appetito-98dc6.appspot.com\",\r\n    messagingSenderId: \"483480006554\",\r\n    appId: \"1:483480006554:web:0938ba5c2a65c3e2f19423\",\r\n    measurementId: \"G-RRS3SN3ZW0\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n","import firebase from 'firebase';\r\nconst db = firebase.firestore();\r\n\r\nconst getMissions = (missionId) => {\r\n    return new Promise((resolve, reject) => {\r\n        let missions = [];\r\n        if (!missionId) {\r\n            db.collection('Missions').get().then(data => {\r\n                data.docs.map(doc => {\r\n                    missions.push(doc.data());\r\n                });\r\n                resolve(missions);\r\n            });\r\n        } else {\r\n            db.collection('Missions').doc(missionId.toString()).get().then(doc => {\r\n                resolve(doc.data());\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport default getMissions;","import firebase from 'firebase';\r\nconst db = firebase.firestore();\r\n\r\nconst getIdByEmail = email => {\r\n    return new Promise((resolve, reject) => {\r\n        db.collection('Clients').get().then(data => {\r\n            data.docs.map(doc => {\r\n                const d = doc.data();\r\n                if (d.email === email) resolve(doc.id);\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\nexport default getIdByEmail;","import React, { useEffect, useState } from 'react';\r\nimport firebase from 'firebase';\r\nimport getMissions from '../firebase/getMissions';\r\nimport getIdByEmail from '../firebase/getIdByEmail';\r\nconst db = firebase.firestore();\r\n\r\n\r\n\r\nconst GoalPage = () => {\r\n\r\n    const [email, setEmail] = useState(null);\r\n    const [missions, setMissions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getMissions().then(missions => {\r\n            setMissions(missions);\r\n        });\r\n    }, []);\r\n\r\n    const handlClick = () => {\r\n        getIdByEmail(email).then(id => {\r\n            setMissions([]);\r\n            db.collection('Clients/' + id + '/Missions').get().then(data => {\r\n                data.docs.map(doc => {\r\n                    doc.data().ID_Mission.get().then(missionsData => {\r\n                        setMissions(msns => [...msns, missionsData.data()]);\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"goal-page\">\r\n            <h3>Goal Page</h3>\r\n            <p>\r\n                <input value='example1@gmail.com' onChange={e => setEmail(e.target.value)} style={{margin: '0 10px'}} type=\"text\" placeholder=\"Enter client email.\" />\r\n                <button onClick={handlClick}>Get</button>\r\n            </p>\r\n            <b>Missions</b>\r\n\r\n            <div className=\"missions\">\r\n                {missions && missions.map((mission, i) => {\r\n                    return (\r\n                        <p key={i}> {mission.Name} </p>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GoalPage;","import firebase from 'firebase';\r\nconst db = firebase.firestore();\r\n\r\nconst getUser = (email) => {\r\n    return new Promise((resolve, reject) => {\r\n        db.collection('Clients').where('email', '==', email).get().then(data => {\r\n            data.docs.map(user => {\r\n                resolve(user.data());\r\n            })\r\n        })\r\n    });\r\n}\r\n\r\nexport default getUser;","import React, { useEffect, useState } from 'react';\r\nimport firebase from 'firebase';\r\nimport getUser from '../firebase/getUser';\r\n\r\nconst ProfilePage = () => {\r\n\r\n    const [profileData, setProfileData] = useState('example1@gmail.com');\r\n    const [email, setEmail] = useState('example1@gmail.com'); \r\n\r\n\r\n    useEffect(() => {\r\n        handlClick();\r\n    }, []);\r\n\r\n\r\n    const handlClick = () => {\r\n        getUser(email).then(data => {\r\n            setProfileData(data);\r\n            console.log(data);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile-page\">\r\n            <h3>Profile Page</h3>\r\n            <p>\r\n                <input value='example1@gmail.com' onChange={e => setEmail(e.target.value)} style={{margin: '0 10px'}} type=\"text\" placeholder=\"Enter client email.\" />\r\n                <button onClick={handlClick}>Get</button>\r\n            </p>\r\n            <b>Profile Data</b>\r\n            <div>\r\n                <p>FirstName: {profileData && profileData.FirstName} </p>\r\n                <p>LastName: {profileData && profileData.LastName} </p>\r\n                <p>Points : {profileData && profileData.Points} </p>\r\n                <p>ID_Type: Client reference  </p>\r\n                <p>SignUpDate: data object </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;","import React, { useEffect, useState } from 'react';\r\nimport firebase from 'firebase';\r\nimport getIdByEmail from '../firebase/getIdByEmail';\r\n\r\nconst db = firebase.firestore();\r\n\r\n\r\nconst MyBookingPage = () => {\r\n\r\n    const [email, setEmail] = useState('example1@gmail.com');\r\n    const [booking, setBooking] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        handlClick();\r\n    }, []);\r\n\r\n\r\n    const handlClick = () => {\r\n        getIdByEmail(email).then(id => {\r\n            \r\n            // get the booking associated with this client\r\n            db.collection('Bookings').doc(id.toString()).get().then(booking => {\r\n                console.log(booking.data()); // this is out booking data\r\n                setBooking(booking.data()); // set the data to the state\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"my-booking-page\">\r\n            <h3>My Bookings</h3>\r\n            <p>\r\n                <input value='example1@gmail.com' onChange={e => setEmail(e.target.value)} style={{margin: '0 10px'}} type=\"text\" placeholder=\"Enter client email.\" />\r\n                <button onClick={handlClick}>Get</button>\r\n\r\n            </p>\r\n            <b>Booking</b>\r\n            <p>Booking Data : booking date object</p>\r\n            <p>Booking Branch: booking branch reference</p>\r\n            <p>Booking Price :  {booking && booking.Price} </p>\r\n            <p>Booking Status: {booking && booking.Status} </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyBookingPage;","import React, { useEffect, useState } from 'react';\r\nimport firebase from 'firebase';\r\nimport getIdByEmail from '../firebase/getIdByEmail';\r\n\r\nconst db = firebase.firestore();\r\n\r\n\r\nconst MyReviewPage = () => {\r\n\r\n    const [email, setEmail] = useState('example1@gmail.com');\r\n    const [reviews, setReviews] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        handlClick();\r\n    }, []);\r\n\r\n\r\n    const handlClick = () => {\r\n        \r\n        // clear state every time the 'get' button is clicked\r\n        setReviews([]);\r\n\r\n        // get all restaurents\r\n        db.collection('Restaurants').get().then(data => {\r\n            data.docs.map(doc => {\r\n\r\n                // 'doc' corresponds to each restaurant\r\n                // find the restaurent id to make a ref to review\r\n                const restaurantId = doc.id;\r\n\r\n                // now let's get all the branches\r\n                const branchRef = db.collection('Restaurants/' + restaurantId + '/Branch');\r\n                // get all the branches\r\n                branchRef.get().then(branchData => {\r\n                    branchData.docs.map(branch => {\r\n\r\n                        // branch id - we need it to make a ref to review\r\n                        const branchId = branch.id;\r\n\r\n                        // get the user id by email\r\n\r\n                        getIdByEmail(email).then(clientId => {\r\n\r\n                            // now let's make our ref to review\r\n                            const reviewDocRef = db.doc('Restaurants/' + restaurantId + '/Branch/' + branchId + '/Reviews/' + clientId);\r\n                            reviewDocRef.get().then(review => {\r\n                                \r\n                                // reivew data\r\n                                const reviewData = review.data();\r\n                                console.log(reviewData); // test\r\n                                if (reviewData) {\r\n                                    // if review exits\r\n                                    setReviews(rvs => [...rvs, reviewData]); // add to the state to render in the component\r\n                                }\r\n                                \r\n\r\n                            });\r\n\r\n                        });\r\n\r\n\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"my-booking-page\">\r\n            <h3>My Reviews</h3>\r\n            <p>\r\n                <input value='example1@gmail.com' onChange={e => setEmail(e.target.value)} style={{margin: '0 10px'}} type=\"text\" placeholder=\"Enter client email.\" />\r\n                <button onClick={handlClick}>Get</button>\r\n\r\n            </p>\r\n            <b>Reviews</b>\r\n            <div>\r\n                {reviews && reviews.map((review, i) => <p key={i}> {review.Description} </p>)}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyReviewPage;","import React, { useEffect, useState } from 'react';\r\nimport firebase from 'firebase';\r\nimport getIdByEmail from '../firebase/getIdByEmail';\r\nconst db = firebase.firestore();\r\n\r\nconst MyFavoritesPage = () => {\r\n\r\n    const [email, setEmail] = useState('example1@gmail.com');\r\n    const [favorites, setFavorites] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        handlClick();\r\n\r\n    }, []);\r\n\r\n    const handlClick = () => {\r\n        // clear state\r\n        setFavorites([]);\r\n        getIdByEmail(email).then(id => {\r\n            const clientDoc = db.doc('Clients/' + id);\r\n            clientDoc.get().then(client => {\r\n                \r\n                const favoritesRef = client.data().Favourites;\r\n                favoritesRef.forEach(ref => {\r\n                    ref.get().then(favorite => {\r\n                        const favoriteData = favorite.data(); // this is our favorite data\r\n                        console.log(favoriteData); // test\r\n                        if (favoriteData) setFavorites(fts => [...fts, favoriteData]); // if favorite exits add to state\r\n                    });\r\n                });\r\n\r\n            });\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"my-favorite-page\">\r\n            <h3>My Favorites</h3>\r\n            <p>\r\n                <input value='example1@gmail.com' onChange={e => setEmail(e.target.value)} style={{margin: '0 10px'}} type=\"text\" placeholder=\"Enter client email.\" />\r\n                <button onClick={handlClick}>Get</button>\r\n            </p>\r\n            <b>Favorites List</b>\r\n            <div>\r\n                {favorites && favorites.map((fav, i) => <p key={i}>HSeats:  {fav.HSeats} <br/> Address: { fav.Address } </p>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyFavoritesPage;","import './firebase/config';\nimport React, { useEffect, useState } from 'react';\nimport GoalPage from './components/goalpage';\nimport ProfilePage from './components/profilepage';\nimport MyBookingPage from './components/mybookingpage';\nimport MyReviewPage from './components/myreviewpage';\nimport MyFavoritesPage from './components/myfavoritepage';\n\n\n\nconst App = () => {\n\n  return (\n    <div style={{padding: '0 20px'}} className=\"app\">\n      <p>By default we are only getting clinet 1 which has example1@gmail.com as email</p>\n      <MyFavoritesPage />\n      <GoalPage />\n      <ProfilePage />\n      <MyBookingPage />\n      <MyReviewPage />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}